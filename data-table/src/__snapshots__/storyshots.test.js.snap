// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Emoji 1`] = `
<button
  onClick={[Function]}
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "border": "1px solid #eee",
      "borderRadius": 3,
      "cursor": "pointer",
      "fontSize": 15,
      "margin": 10,
      "padding": "3px 10px",
    }
  }
  type="button"
>
  <span
    aria-label="so cool"
    role="img"
  >
    üòÄ üòé üëç üíØ
  </span>
</button>
`;

exports[`Storyshots Button Text 1`] = `
<button
  onClick={[Function]}
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "border": "1px solid #eee",
      "borderRadius": 3,
      "cursor": "pointer",
      "fontSize": 15,
      "margin": 10,
      "padding": "3px 10px",
    }
  }
  type="button"
>
  Hello Button
</button>
`;

exports[`Storyshots RawTable Empty Table 1`] = `
.c0 {
  min-height: 50vh;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 2em;
  color: gray;
}

<div
  className="c0"
>
  <p>
    No records found
  </p>
</div>
`;

exports[`Storyshots RawTable Non Empty Table 1`] = `
.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: rotate(0);
  -ms-transform: rotate(0);
  transform: rotate(0);
  -webkit-transition: 0.2s ease;
  transition: 0.2s ease;
}

.c3:hover.c2 {
  -webkit-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2);
}

.c1 {
  font-size: 1.2rem;
  font-weight: 600;
  text-transform: capitalize;
  padding: 10px;
}

.c5 {
  font-size: 1rem;
  font-weight: 300;
  padding: 10px;
  background: #DEEBF7;
}

.c6 {
  font-size: 1rem;
  font-weight: 300;
  padding: 10px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #5e9cd3;
  color: white;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

<table
  cellpadding="0"
  cellspacing="0"
>
  <tbody>
    <tr>
      <td>
        <div
          className="c0"
        >
          <div
            className="c1"
          >
            name
          </div>
          <div
            className="c2 c3"
          >
            <div
              className="c4"
              onClick={[Function]}
              orientation="rotate(0)"
              title="sort"
            >
              <svg
                enableBackground="new 0 0 426.667 426.667"
                height="0.8rem"
                version="1.1"
                viewBox="0 0 426.667 426.667"
                x="0"
                xmlSpace="preserve"
                xmlns="http://www.w3.org/2000/svg"
                y="0"
              >
                <path
                  d="M319.36 12.587L220.587 111.36 249.173 138.667 288.64 99.2 298.24 77.867 298.24 320 340.907 320 340.907 78.08 348.8 97.92 389.76 138.88 418.133 111.147z"
                  fill="white"
                />
                <path
                  d="M176.64 288L136.32 328.107 127.573 350.933 127.573 106.667 84.907 106.667 84.907 350.72 75.52 327.253 36.053 287.787 8.533 316.373 106.453 414.293 204.16 316.587z"
                  fill="white"
                />
                <path
                  d="M84.907 0H127.574V64H84.907z"
                  fill="white"
                />
                <path
                  d="M298.24 362.667H340.90700000000004V426.667H298.24z"
                  fill="white"
                />
              </svg>
            </div>
          </div>
        </div>
      </td>
      <td>
        <div
          className="c0"
        >
          <div
            className="c1"
          >
            address
          </div>
          <div
            className="c2 c3"
          >
            <div
              className="c4"
              onClick={[Function]}
              orientation="rotate(0)"
              title="sort"
            >
              <svg
                enableBackground="new 0 0 426.667 426.667"
                height="0.8rem"
                version="1.1"
                viewBox="0 0 426.667 426.667"
                x="0"
                xmlSpace="preserve"
                xmlns="http://www.w3.org/2000/svg"
                y="0"
              >
                <path
                  d="M319.36 12.587L220.587 111.36 249.173 138.667 288.64 99.2 298.24 77.867 298.24 320 340.907 320 340.907 78.08 348.8 97.92 389.76 138.88 418.133 111.147z"
                  fill="white"
                />
                <path
                  d="M176.64 288L136.32 328.107 127.573 350.933 127.573 106.667 84.907 106.667 84.907 350.72 75.52 327.253 36.053 287.787 8.533 316.373 106.453 414.293 204.16 316.587z"
                  fill="white"
                />
                <path
                  d="M84.907 0H127.574V64H84.907z"
                  fill="white"
                />
                <path
                  d="M298.24 362.667H340.90700000000004V426.667H298.24z"
                  fill="white"
                />
              </svg>
            </div>
          </div>
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <div
          className="c5"
        >
          lorem
        </div>
      </td>
      <td>
        <div
          className="c5"
        >
          ipsum
        </div>
      </td>
    </tr>
    <tr>
      <td>
        <div
          className="c6"
        >
          dolor
        </div>
      </td>
      <td>
        <div
          className="c6"
        >
          sit
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots SearchBox Search Bar 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0 1rem;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 10rem;
}

<div
  className="c0"
>
  <input
    id="myInput"
    onChange={[Function]}
    placeholder="Search for items.."
    style={
      Object {
        "height": "35%",
        "width": "100%",
      }
    }
    title="Type in a name"
    type="search"
  />
</div>
`;

exports[`Storyshots TableCell Simple Cell 1`] = `
.c0 {
  font-size: 1rem;
  font-weight: 300;
  padding: 10px;
  background: white;
}

<div
  className="c0"
>
  render anything
</div>
`;

exports[`Storyshots Welcome to Storybook 1`] = `
<article
  style={
    Object {
      "backgroundColor": "#fff",
      "color": "#000",
      "fontFamily": "\\"Helvetica Neue\\", Helvetica, \\"Segoe UI\\", Arial, freesans, sans-serif",
      "lineHeight": 1.4,
      "padding": 15,
    }
  }
>
  <h1>
    Welcome to storybook
  </h1>
  <p>
    This is a UI component dev environment for your app.
  </p>
  <p>
    We've added some basic stories inside the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      src/stories
    </code>
     directory.
    <br />
    A story is a single state of one or more UI components. You can have as many stories as you want.
    <br />
    (Basically a story is like a visual test case.)
  </p>
  <p>
    See these sample 
    <button
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderBottom": "1px solid #1474f3",
          "borderLeft": "none",
          "borderRight": "none",
          "borderTop": "none",
          "color": "#1474f3",
          "cursor": "pointer",
          "font": "inherit",
          "padding": 0,
          "paddingBottom": 2,
          "textDecoration": "none",
        }
      }
      type="button"
    >
      stories
    </button>
     for a component called¬†
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      Button
    </code>
    .
  </p>
  <p>
    Just like that, you can add your own components as stories.
    <br />
    You can also edit those components and see changes right away.
    <br />
    (Try editing the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      Button
    </code>
     stories located at¬†
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      src/stories/index.js
    </code>
    .)
  </p>
  <p>
    Usually we create stories with smaller UI components in the app.
    <br />
    Have a look at the¬†
    <a
      href="https://storybook.js.org/basics/writing-stories"
      rel="noopener noreferrer"
      style={
        Object {
          "borderBottom": "1px solid #1474f3",
          "color": "#1474f3",
          "paddingBottom": 2,
          "textDecoration": "none",
        }
      }
      target="_blank"
    >
      Writing Stories
    </a>
    ¬†section in our documentation.
  </p>
  <p
    style={
      Object {
        "opacity": 0.5,
      }
    }
  >
    <b>
      NOTE:
    </b>
    <br />
    Have a look at the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      .storybook/webpack.config.js
    </code>
     to add webpack loaders and plugins you are using in this project.
  </p>
</article>
`;
